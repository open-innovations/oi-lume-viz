---
title: SVG map
description: |
  A simple map to show GeoJSON. It can have place labels and markers.
order: 31
showcase: 2
component: map.svg
version: v0.7.0
examples:
  - title: A basic map
    description: |
      The polygons are defined by the `geojson→data` key which loads a GeoJSON file (you may want to put your GeoJSON through our <a href="https://open-innovations.github.io/geojson-minify/">GeoJSON Minify tool</a> first).
      
      The `geojson→key` attribute is used to match a property in `geojson→data→features[]→properties` with the `key` attribute in the `data` rows e.g. we try to match the `code` attribute in the data (say "E08000016") with the `LAD21CD` key in the GeoJSON. The `value` key is the name of a column in the `data` that defines the colour to use for the polygon. A `tooltip` can also be specified as the name of a column in the `data`.
    config:
      data:
        - { code: "E08000016", name: "Barnsley" }
        - { code: "E08000032", name: "Bradford" }
        - { code: "E08000033", name: "Calderdale" }
        - { code: "E07000163", name: "Craven" }
        - { code: "E07000165", name: "Harrogate" }
        - { code: "E08000034", name: "Kirklees" }
        - { code: "E08000035", name: "Leeds" }
        - { code: "E07000169", name: "Selby" }
        - { code: "E08000036", name: "Wakefield" }
        - { code: "E06000014", name: "York" }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      key: code
      tooltip: name

  - title: Colour a map - defined colours
    description: |
      This example is mostly the same as the previous one but we've added a `colour` attribute to each item in `data` and we set `value` to that name so that each area gets a specific colour.
    config:
      data:
        - { code: "E08000016", name: "Barnsley", colour: "#E6007C" }
        - { code: "E08000032", name: "Bradford", colour: "#FF6700" }
        - { code: "E08000033", name: "Calderdale", colour: "#0DBC37" }
        - { code: "E07000163", name: "Craven", colour: "#178CFF" }
        - { code: "E07000165", name: "Harrogate", colour: "#2f529f" }
        - { code: "E08000034", name: "Kirklees", colour: "#722EA5" }
        - { code: "E08000035", name: "Leeds", colour: "#F9BC26" }
        - { code: "E07000169", name: "Selby", colour: "#1DD3A7" }
        - { code: "E08000036", name: "Wakefield", colour: "#EF3AAB" }
        - { code: "E06000014", name: "York", colour: "#F92626" }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      key: code
      tooltip: name
      value: colour

  - title: Colour a map - using a defined scale
    description: |
      In this example we'll use a numeric column (`Aged 15 years and under`) in the data to set the `value` to use along with `scale` to colour each area. The `scale` can be given as a known string (e.g. "Viridis") or a CSS-style gradient (e.g. "#ffe837 0%, #7d7d77 50%, #042450 100%"). The `min` and `max` for the `scale` will be calculated from the data unless provided.
    config:
      data:
        - { LAD21CD: "E08000016", "LAD21NM":"Barnsley", colour: "#E6007C","Aged 15 years and under":44782 }
        - { LAD21CD: "E08000032", "LAD21NM":"Bradford", colour: "#FF6700","Aged 15 years and under":124837 }
        - { LAD21CD: "E08000033", "LAD21NM":"Calderdale", colour: "#0DBC37","Aged 15 years and under":39997 }
        - { LAD21CD: "E07000163", "LAD21NM":"Craven", colour: "#178CFF","Aged 15 years and under":8643 }
        - { LAD21CD: "E07000165", "LAD21NM":"Harrogate", colour: "#2f529f","Aged 15 years and under":27362 }
        - { LAD21CD: "E08000034", "LAD21NM":"Kirklees", colour: "#722EA5","Aged 15 years and under":86941 }
        - { LAD21CD: "E08000035", "LAD21NM":"Leeds", colour: "#F9BC26","Aged 15 years and under":153483 }
        - { LAD21CD: "E07000169", "LAD21NM":"Selby", colour: "#1DD3A7","Aged 15 years and under":16556 }
        - { LAD21CD: "E08000036", "LAD21NM":"Wakefield", colour: "#EF3AAB","Aged 15 years and under":65832 }
        - { LAD21CD: "E06000014", "LAD21NM":"York", colour: "#F92626","Aged 15 years and under":30738 }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      key: LAD21CD
      value: Aged 15 years and under
      scale: Viridis
      tooltip: LAD21NM

  - title: Set opacity of the data layer
    description: |
      In this example we will set the `fillOpacity` of the data layer to `0.5` (the default value is 1).
    config:
      data:
        - { LAD21CD: "E08000016", "LAD21NM":"Barnsley", colour: "#E6007C","Aged 15 years and under":44782 }
        - { LAD21CD: "E08000032", "LAD21NM":"Bradford", colour: "#FF6700","Aged 15 years and under":124837 }
        - { LAD21CD: "E08000033", "LAD21NM":"Calderdale", colour: "#0DBC37","Aged 15 years and under":39997 }
        - { LAD21CD: "E07000163", "LAD21NM":"Craven", colour: "#178CFF","Aged 15 years and under":8643 }
        - { LAD21CD: "E07000165", "LAD21NM":"Harrogate", colour: "#2f529f","Aged 15 years and under":27362 }
        - { LAD21CD: "E08000034", "LAD21NM":"Kirklees", colour: "#722EA5","Aged 15 years and under":86941 }
        - { LAD21CD: "E08000035", "LAD21NM":"Leeds", colour: "#F9BC26","Aged 15 years and under":153483 }
        - { LAD21CD: "E07000169", "LAD21NM":"Selby", colour: "#1DD3A7","Aged 15 years and under":16556 }
        - { LAD21CD: "E08000036", "LAD21NM":"Wakefield", colour: "#EF3AAB","Aged 15 years and under":65832 }
        - { LAD21CD: "E06000014", "LAD21NM":"York", colour: "#F92626","Aged 15 years and under":30738 }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      key: LAD21CD
      value: Aged 15 years and under
      scale: Viridis
      tooltip: LAD21NM
      options:
        fillOpacity: 0.5

  - title: Add a legend
    description: |
      Sometimes you need a `legend` with defined levels. To make this we first manually set `min` and `max` (otherwise they are calculated from the data and won't necessarily match our levels). We `position` (e.g. `top`, `top left`, `top right`, `bottom`, `bottom right`, `bottom left`) and add `items` to the legend. Each item has a `value` and `label` although the label can be empty.
    config:
      data:
        - { LAD21CD: "E08000016", "LAD21NM":"Barnsley", colour: "#E6007C","Aged 15 years and under":44782,"Aged 16 to 24 years":22101,"Aged 25 to 34 years":32949,"Aged 35 to 49 years":44857,"Aged 50 to 64 years":52285,"Aged 65 years and over":47598 }
        - { LAD21CD: "E08000032", "LAD21NM":"Bradford", colour: "#FF6700","Aged 15 years and under":124837,"Aged 16 to 24 years":63079,"Aged 25 to 34 years":72559,"Aged 35 to 49 years":107702,"Aged 50 to 64 years":95233,"Aged 65 years and over":83001 }
        - { LAD21CD: "E08000033", "LAD21NM":"Calderdale", colour: "#0DBC37","Aged 15 years and under":39997,"Aged 16 to 24 years":19163,"Aged 25 to 34 years":24920,"Aged 35 to 49 years":39472,"Aged 50 to 64 years":43769,"Aged 65 years and over":39310 }
        - { LAD21CD: "E07000163", "LAD21NM":"Craven", colour: "#178CFF","Aged 15 years and under":8643,"Aged 16 to 24 years":4324,"Aged 25 to 34 years":5353,"Aged 35 to 49 years":9303,"Aged 50 to 64 years":13675,"Aged 65 years and over":15629 }
        - { LAD21CD: "E07000165", "LAD21NM":"Harrogate", colour: "#2f529f","Aged 15 years and under":27362,"Aged 16 to 24 years":14198,"Aged 25 to 34 years":16587,"Aged 35 to 49 years":29713,"Aged 50 to 64 years":36781,"Aged 65 years and over":38026 }
        - { LAD21CD: "E08000034", "LAD21NM":"Kirklees", colour: "#722EA5","Aged 15 years and under":86941,"Aged 16 to 24 years":47172,"Aged 25 to 34 years":54869,"Aged 35 to 49 years":83410,"Aged 50 to 64 years":84011,"Aged 65 years and over":76813 }
        - { LAD21CD: "E08000035", "LAD21NM":"Leeds", colour: "#F9BC26","Aged 15 years and under":153483,"Aged 16 to 24 years":113371,"Aged 25 to 34 years":121267,"Aged 35 to 49 years":157374,"Aged 50 to 64 years":139693,"Aged 65 years and over":126766 }
        - { LAD21CD: "E07000169", "LAD21NM":"Selby", colour: "#1DD3A7","Aged 15 years and under":16556,"Aged 16 to 24 years":7619,"Aged 25 to 34 years":11398,"Aged 35 to 49 years":17234,"Aged 50 to 64 years":20409,"Aged 65 years and over":18772 }
        - { LAD21CD: "E08000036", "LAD21NM":"Wakefield", colour: "#EF3AAB","Aged 15 years and under":65832,"Aged 16 to 24 years":31934,"Aged 25 to 34 years":48974,"Aged 35 to 49 years":67141,"Aged 50 to 64 years":72877,"Aged 65 years and over":66607 }
        - { LAD21CD: "E06000014", "LAD21NM":"York", colour: "#F92626","Aged 15 years and under":30738,"Aged 16 to 24 years":33671,"Aged 25 to 34 years":25845,"Aged 35 to 49 years":36356,"Aged 50 to 64 years":37478,"Aged 65 years and over":38733 }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      key: LAD21CD
      tooltip: LAD21NM
      value: Aged 15 years and under
      scale: Viridis
      min: 0
      max: 160000
      legend:
          position: top right
          items:
            - value: 160000
              label: 160k
            - value: 120000
              label: ''
            - value: 80000
              label: 80k
            - value: 40000
              label: ''
            - value: 0
              label: '0'

  - title: Custom tooltips
    description: |
      We will create a virtual column with the `name` "Tooltip label" to define the `tooltip` text. Virtual columns must have a `name` and `template` which can include existing columns from the data e.g. "{{ LAD21NM }}: {{ Aged 15 years and under }}" would use the `LAD21CD` and `Aged 15 years and under` values from the data. Replacement values (e.g. "{{ Aged 15 years and under }}") can use the following filters:
        - `toFixed(n)` - to limit a value to `n` decimal places
        - `multiply(n)` - to multiply a value by `n`
        - `toLocaleString()` - to use the locale's (of the server) preferred formatting for a value
        - `colourScale(scale,min,max)` - get a colour to, for example, use as a background style
        - `contrastColour` - get a contrasting colour (black or white)
    config:
      data:
        - { LAD21CD: "E08000016", "LAD21NM":"Barnsley", colour: "#E6007C","Aged 15 years and under":44782 }
        - { LAD21CD: "E08000032", "LAD21NM":"Bradford", colour: "#FF6700","Aged 15 years and under":124837 }
        - { LAD21CD: "E08000033", "LAD21NM":"Calderdale", colour: "#0DBC37","Aged 15 years and under":39997 }
        - { LAD21CD: "E07000163", "LAD21NM":"Craven", colour: "#178CFF","Aged 15 years and under":8643 }
        - { LAD21CD: "E07000165", "LAD21NM":"Harrogate", colour: "#2f529f","Aged 15 years and under":27362 }
        - { LAD21CD: "E08000034", "LAD21NM":"Kirklees", colour: "#722EA5","Aged 15 years and under":86941 }
        - { LAD21CD: "E08000035", "LAD21NM":"Leeds", colour: "#F9BC26","Aged 15 years and under":153483 }
        - { LAD21CD: "E07000169", "LAD21NM":"Selby", colour: "#1DD3A7","Aged 15 years and under":16556 }
        - { LAD21CD: "E08000036", "LAD21NM":"Wakefield", colour: "#EF3AAB","Aged 15 years and under":65832 }
        - { LAD21CD: "E06000014", "LAD21NM":"York", colour: "#F92626","Aged 15 years and under":30738 }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      columns:
        - name: Tooltip label
          template: "{{ LAD21NM }}<br />Aged 15 and under: {{ Aged 15 years and under | toLocaleString() }}"
      key: LAD21CD
      tooltip: Tooltip label
      value: colour

  - title: Place labels
    description: |
      We can add `places` to a layer above the interactive map. A place can be defined with the following properties:
        * `name` - the label to use for the place label
        * `latitude` - set the latitude of the label (can be omitted if it is a UK place we know about)
        * `longitude` - set the longitude of the label (can be omitted if it is a UK place we know about)
        * `text-anchor` - set to either `start`, `middle`, or `end` to anchor the text
        * `colour` - the colour of the label (default is black)
        * `border` - the colour of the label border (default is white)
        * `font-size` - manually set the font size (if omitted it will be scaled to the population where known)
        * `font-weight` - manually set the font weight (e.g. to "bold")
        * `font-family` - manually set the font family
    config:
      data:
        - { code: "E08000016", name: "Barnsley" }
        - { code: "E08000032", name: "Bradford" }
        - { code: "E08000033", name: "Calderdale" }
        - { code: "E07000163", name: "Craven" }
        - { code: "E07000165", name: "Harrogate" }
        - { code: "E08000034", name: "Kirklees" }
        - { code: "E08000035", name: "Leeds" }
        - { code: "E07000169", name: "Selby" }
        - { code: "E08000036", name: "Wakefield" }
        - { code: "E06000014", name: "York" }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      key: code
      tooltip: name
      places:
          - name: Bradford
            text-anchor: end
            font-size: 24
          - name: Leeds
            font-size: 32
            font-weight: bold
            font-family: "Times, serif"
            colour: "#722EA5"
            border: "#1DD3A7"
          - name: Halifax
          - name: Harrogate
          - name: Huddersfield
          - name: Settle
            latitude: 54.0693
            longitude: -2.2790
          - name: Skipton
            latitude: 53.9619
            longitude: -2.0174
          - name: Wakefield
            text-anchor: start
            latitude: 53.68331
            longitude: -1.49768
          - name: York

  - title: Map markers
    description: |
      We can add `markers` to a layer above the interactive map. A marker can be defined with the following properties:
        * `icon` - can be either:
          * `string` - one of `default`, `geo`, `geo-alt`, `asterisk`, `pin`, `balloon`, `balloon-heart`, `chat-square`
          * `object` - define an icon using the following properties
            * `svg` - the SVG string to use
            * `size` - e.g. `[40,40]`
            * `anchor` - e.g. `[20,0]` 
        * `latitude` - set the latitude of the marker
        * `longitude` - set the longitude of the marker
        * `colour` - the colour of the label (default is black)
        * `tooltip` - the content of an optional tooltip

      Be aware that markers sit above the interactive layer so may block some interactivity.
    config:
      data:
        - { code: "E08000016", name: "Barnsley" }
        - { code: "E08000032", name: "Bradford" }
        - { code: "E08000033", name: "Calderdale" }
        - { code: "E07000163", name: "Craven" }
        - { code: "E07000165", name: "Harrogate" }
        - { code: "E08000034", name: "Kirklees" }
        - { code: "E08000035", name: "Leeds" }
        - { code: "E07000169", name: "Selby" }
        - { code: "E08000036", name: "Wakefield" }
        - { code: "E06000014", name: "York" }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      key: code
      tooltip: name
      markers:
        - icon:
            svg: '<svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-award-fill" viewBox="0 0 16 16"><path d="m8 0 1.669.864 1.858.282.842 1.68 1.337 1.32L13.4 6l.306 1.854-1.337 1.32-.842 1.68-1.858.282L8 12l-1.669-.864-1.858-.282-.842-1.68-1.337-1.32L2.6 6l-.306-1.854 1.337-1.32.842-1.68L6.331.864 8 0z"/><path d="M4 11.794V16l4-1 4 1v-4.206l-2.018.306L8 13.126 6.018 12.1 4 11.794z"/></svg>'
            size: [30,30]
            anchor: [15,15]
          tooltip: "Barnsley marker"
          latitude: 53.5529
          longitude: -1.4825
          colour: "#EF3AAB"
        - icon: geo
          tooltip: "Bradford marker"
          latitude: 53.7944
          longitude: -1.7519
          colour: "#2254F4"
        - icon: balloon
          tooltip: "Huddersfield marker"
          latitude: 53.6463
          longitude: -1.7853
          colour: "#0DBC37"
        - icon: chat-square
          tooltip: "Halifax marker"
          latitude: 53.7211
          longitude: -1.8622
          colour: "#722EA5"
        - icon: geo-alt
          tooltip: "Leeds marker"
          latitude: 53.7968
          longitude: -1.5439
          colour: "#F9BC26"
        - icon: pin
          tooltip: "Wakefield marker"
          latitude: 53.68331
          longitude: -1.49768
          colour: "#D60303"
        - icon: asterisk
          tooltip: "York marker"
          latitude: 53.9601
          longitude: -1.0808
        - latitude: 53.9617
          longitude: -2.0201

  - title: Add a background
    description: |
      A non-interactive `background` can be added as a layer behind the interactive map. It should contain GeoJSON `data`. It can have its `colour` set. We can also adjust the map `bounds` if we'd like the view to cover an area smaller/larger than the bounds of the data. Note that the exact bounding of the map will also depend on the aspect ratio that the map ends up on the end-user's display.
    config:
      data:
        - { code: "E08000016", "LAD21NM":"Barnsley", colour: "#E6007C","Aged 15 years and under":44782 }
        - { code: "E08000032", "LAD21NM":"Bradford", colour: "#FF6700","Aged 15 years and under":124837 }
        - { code: "E08000033", "LAD21NM":"Calderdale", colour: "#0DBC37","Aged 15 years and under":39997 }
        - { code: "E07000163", "LAD21NM":"Craven", colour: "#178CFF","Aged 15 years and under":8643 }
        - { code: "E07000165", "LAD21NM":"Harrogate", colour: "#2f529f","Aged 15 years and under":27362 }
        - { code: "E08000034", "LAD21NM":"Kirklees", colour: "#722EA5","Aged 15 years and under":86941 }
        - { code: "E08000035", "LAD21NM":"Leeds", colour: "#F9BC26","Aged 15 years and under":153483 }
        - { code: "E07000169", "LAD21NM":"Selby", colour: "#1DD3A7","Aged 15 years and under":16556 }
        - { code: "E08000036", "LAD21NM":"Wakefield", colour: "#EF3AAB","Aged 15 years and under":65832 }
        - { code: "E06000014", "LAD21NM":"York", colour: "#F92626","Aged 15 years and under":30738 }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      key: code
      tooltip: LAD21NM
      value: "Aged 15 years and under"
      scale: Viridis
      background:
        geojson: geojson.england
        colour: silver
      bounds:
        lat:
          min: 53.3
          max: 54.45
        lon:
          min: -3
          max: -0.3

  - title: Set padding
    description: |
      You can set the `padding` between the data layer and the map edges. The value is given in the pixel scale of the generated map (which may not be the same as the pixels the map takes up on screen).
    config:
      data:
        - { code: "E08000016", "LAD21NM":"Barnsley", colour: "#E6007C","Aged 15 years and under":44782 }
        - { code: "E08000032", "LAD21NM":"Bradford", colour: "#FF6700","Aged 15 years and under":124837 }
        - { code: "E08000033", "LAD21NM":"Calderdale", colour: "#0DBC37","Aged 15 years and under":39997 }
        - { code: "E07000163", "LAD21NM":"Craven", colour: "#178CFF","Aged 15 years and under":8643 }
        - { code: "E07000165", "LAD21NM":"Harrogate", colour: "#2f529f","Aged 15 years and under":27362 }
        - { code: "E08000034", "LAD21NM":"Kirklees", colour: "#722EA5","Aged 15 years and under":86941 }
        - { code: "E08000035", "LAD21NM":"Leeds", colour: "#F9BC26","Aged 15 years and under":153483 }
        - { code: "E07000169", "LAD21NM":"Selby", colour: "#1DD3A7","Aged 15 years and under":16556 }
        - { code: "E08000036", "LAD21NM":"Wakefield", colour: "#EF3AAB","Aged 15 years and under":65832 }
        - { code: "E06000014", "LAD21NM":"York", colour: "#F92626","Aged 15 years and under":30738 }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      key: code
      tooltip: LAD21NM
      value: "Aged 15 years and under"
      scale: Viridis
      background:
        geojson: geojson.england
        colour: silver
      padding: 50

  - title: Add a graticule
    description: |
      We can also add a `graticule` to the map which will be placed above the background/data layers and below the label/markers.
    config:
      data:
        - { code: "E08000016", "LAD21NM":"Barnsley", colour: "#E6007C","Aged 15 years and under":44782 }
        - { code: "E08000032", "LAD21NM":"Bradford", colour: "#FF6700","Aged 15 years and under":124837 }
        - { code: "E08000033", "LAD21NM":"Calderdale", colour: "#0DBC37","Aged 15 years and under":39997 }
        - { code: "E07000163", "LAD21NM":"Craven", colour: "#178CFF","Aged 15 years and under":8643 }
        - { code: "E07000165", "LAD21NM":"Harrogate", colour: "#2f529f","Aged 15 years and under":27362 }
        - { code: "E08000034", "LAD21NM":"Kirklees", colour: "#722EA5","Aged 15 years and under":86941 }
        - { code: "E08000035", "LAD21NM":"Leeds", colour: "#F9BC26","Aged 15 years and under":153483 }
        - { code: "E07000169", "LAD21NM":"Selby", colour: "#1DD3A7","Aged 15 years and under":16556 }
        - { code: "E08000036", "LAD21NM":"Wakefield", colour: "#EF3AAB","Aged 15 years and under":65832 }
        - { code: "E06000014", "LAD21NM":"York", colour: "#F92626","Aged 15 years and under":30738 }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      key: code
      tooltip: LAD21NM
      value: "Aged 15 years and under"
      scale: Viridis
      background:
        geojson: geojson.england
        colour: silver
      graticule:
        step: [0.5,0.5]
      bounds:
        lat:
          min: 53.3
          max: 54.45
        lon:
          min: -3
          max: -0.3

  - title: Set layer order
    description: |
      The default ordering of the layers used to make the map is (bottom to top): `background` → `data` → `graticule` → `labels` → `markers`. We can choose to limit or re-order the `layers` explicitly by creating an array of layers ordered from bottom to top e.g. let's order the layers with the `graticule` under the `data` layer.
    config:
      data:
        - { code: "E08000016", "LAD21NM":"Barnsley", colour: "#E6007C","Aged 15 years and under":44782 }
        - { code: "E08000032", "LAD21NM":"Bradford", colour: "#FF6700","Aged 15 years and under":124837 }
        - { code: "E08000033", "LAD21NM":"Calderdale", colour: "#0DBC37","Aged 15 years and under":39997 }
        - { code: "E07000163", "LAD21NM":"Craven", colour: "#178CFF","Aged 15 years and under":8643 }
        - { code: "E07000165", "LAD21NM":"Harrogate", colour: "#2f529f","Aged 15 years and under":27362 }
        - { code: "E08000034", "LAD21NM":"Kirklees", colour: "#722EA5","Aged 15 years and under":86941 }
        - { code: "E08000035", "LAD21NM":"Leeds", colour: "#F9BC26","Aged 15 years and under":153483 }
        - { code: "E07000169", "LAD21NM":"Selby", colour: "#1DD3A7","Aged 15 years and under":16556 }
        - { code: "E08000036", "LAD21NM":"Wakefield", colour: "#EF3AAB","Aged 15 years and under":65832 }
        - { code: "E06000014", "LAD21NM":"York", colour: "#F92626","Aged 15 years and under":30738 }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      bounds:
        lat:
          min: 53.3
          max: 54.45
        lon:
          min: -3
          max: -0.3
      layers:
        - type: background
          geojson: geojson.england
          colour: silver
        - type: graticule
          step: [0.5,0.5]
        - type: data
          key: code
          value: "Aged 15 years and under"
          tooltip: LAD21NM
          scale: Viridis
      test: true

  - title: Filter map
    description: |
      <div class="warning centred padded padded-bottom">Note that this feature is a progressive enhancement and will only function if Javascript is enabled.</div>
      
      We can add an interactive `filter` to our svg map. We can set `tools → filter → label` to the `name` of a column in the data - this defines the text used in the filter drop-down list. We can set the maximum number of results to show in the filter drop down using `tools → filter → max`.
    config:
      data:
        - { code: "E08000016", "LAD21NM":"Barnsley", colour: "#E6007C","Aged 15 years and under":44782 }
        - { code: "E08000032", "LAD21NM":"Bradford", colour: "#FF6700","Aged 15 years and under":124837 }
        - { code: "E08000033", "LAD21NM":"Calderdale", colour: "#0DBC37","Aged 15 years and under":39997 }
        - { code: "E07000163", "LAD21NM":"Craven", colour: "#178CFF","Aged 15 years and under":8643 }
        - { code: "E07000165", "LAD21NM":"Harrogate", colour: "#2f529f","Aged 15 years and under":27362 }
        - { code: "E08000034", "LAD21NM":"Kirklees", colour: "#722EA5","Aged 15 years and under":86941 }
        - { code: "E08000035", "LAD21NM":"Leeds", colour: "#F9BC26","Aged 15 years and under":153483 }
        - { code: "E07000169", "LAD21NM":"Selby", colour: "#1DD3A7","Aged 15 years and under":16556 }
        - { code: "E08000036", "LAD21NM":"Wakefield", colour: "#EF3AAB","Aged 15 years and under":65832 }
        - { code: "E06000014", "LAD21NM":"York", colour: "#F92626","Aged 15 years and under":30738 }
      geojson:
        key: LAD21CD
        data: geojson.leeds_city_region
      key: code
      tooltip: LAD21NM
      value: "Aged 15 years and under"
      scale: Viridis
      background:
        geojson: geojson.england
        colour: silver
      bounds:
        lat:
          min: 53.3
          max: 54.45
        lon:
          min: -3
          max: -0.3
      tools:
        filter:
          label: "filterLabel"
      columns:
        - name: "filterLabel"
          template: "{{ LAD21NM }} ({{ code }})"

  - title: "Display a line"
    description: |
      So far we've been showing polygons but we can also show lines. Here's the route of <a href="https://strudel.org.uk/RTWbike/blog/">a bike trip along the Atlantic Coast of Europe</a>.
    config:
      data:
        - name: "2017-06-17"
        - name: "2017-06-18"
        - name: "2017-06-19"
        - name: "2017-06-20"
        - name: "2017-06-21"
        - name: "2017-06-22"
        - name: "2017-06-23"
        - name: "2017-06-24"
        - name: "2017-06-25"
        - name: "2017-06-26"
        - name: "2017-06-27"
        - name: "2017-06-28"
        - name: "2017-06-29"
        - name: "2017-06-30"
        - name: "2017-07-01"
        - name: "2017-07-02"
        - name: "2017-07-03"
        - name: "2017-07-04"
        - name: "2017-07-05"
        - name: "2017-07-06"
        - name: "2017-07-07"
        - name: "2017-07-08"
        - name: "2017-07-09"
        - name: "2017-07-10"
        - name: "2017-07-11"
        - name: "2017-07-12"
        - name: "2017-07-13"
        - name: "2017-07-14"
        - name: "2017-07-15"
        - name: "2017-07-16"
        - name: "2017-07-17"
        - name: "2017-07-18"
        - name: "2017-07-19"
        - name: "2017-07-20"
        - name: "2017-07-21"
        - name: "2017-07-22"
        - name: "2017-07-23"
        - name: "2017-07-24"
        - name: "2017-07-25"
        - name: "2017-07-26"
        - name: "2017-07-27"
        - name: "2017-07-28"
        - name: "2017-07-29"
        - name: "2017-07-30"
        - name: "2017-07-31"
        - name: "2017-08-01"
        - name: "2017-08-02"
        - name: "2017-08-03"
        - name: "2017-08-04"
        - name: "2017-08-05"
        - name: "2017-08-06"
        - name: "2017-08-07"
        - name: "2017-08-08"
        - name: "2017-08-09"
        - name: "2017-08-10"
        - name: "2017-08-11"
        - name: "2017-08-12"
        - name: "2017-08-13"
        - name: "2017-08-14"
        - name: "2017-08-15"
        - name: "2017-08-16"
        - name: "2017-08-17"
        - name: "2017-08-18"
        - name: "2017-08-19"
        - name: "2017-08-21"
        - name: "2017-08-22"
        - name: "2017-08-23"
        - name: "2017-08-24"
        - name: "2017-08-25"
        - name: "2017-08-26"
        - name: "2017-08-27"
        - name: "2017-08-28"
        - name: "2017-08-29"
        - name: "2017-08-30"
        - name: "2017-08-31"
        - name: "2017-09-01"
        - name: "2017-09-03"
        - name: "2017-09-04"
        - name: "2017-09-05"
        - name: "2017-09-06"
        - name: "2017-09-07"
        - name: "2017-09-08"
        - name: "2017-09-09"
        - name: "2017-09-10"
        - name: "2017-09-11"
        - name: "2017-09-12"
        - name: "2017-09-13"
        - name: "2017-09-14"
        - name: "2017-09-15"
        - name: "2017-09-16"
        - name: "2017-09-17"
        - name: "2017-09-19"
        - name: "2017-09-20"
        - name: "2017-09-21"
        - name: "2017-09-22"
        - name: "2017-09-23"
        - name: "2017-09-24"
        - name: "2017-09-25"
        - name: "2017-09-26"
        - name: "2017-09-27"
        - name: "2017-09-28"
        - name: "2017-09-30"
        - name: "2017-10-01"
        - name: "2017-10-02"
        - name: "2017-10-03"
        - name: "2017-10-04"
        - name: "2017-10-05"
        - name: "2017-10-07"
        - name: "2017-10-08"
        - name: "2017-10-09"
        - name: "2017-10-10"
        - name: "2017-10-11"
        - name: "2017-10-12"
        - name: "2017-10-13"
        - name: "2017-10-14"
        - name: "2017-10-15"
        - name: "2017-10-16"
      geojson:
        key: name
        data: geojson.lowe2017real
      key: name
      projection:
        name: orthographic
        lat: 52
        lon: 10
      min: 0
      columns:
        - name: Tooltip
          template: "<strong>{{ name | strftime('%e %b %Y') }}</strong><br />Distance: <strong>{{ geojson.properties.day_km }}</strong> ({{ geojson.properties.day_miles }})<br />Total distance: <strong>{{ geojson.properties.total_km }}</strong> ({{ geojson.properties.total_miles }})<br />Elevation gain: <strong>{{ geojson.properties.elevation_gain }}</strong><br />Total elevation gain: <strong>{{ geojson.properties.elevation_total }}</strong>"
        - name: colour
          template: "{{ geojson.properties.stroke }}"
      tooltip: Tooltip
      background:
        geojson: geojson.europe
        colour: "#dfdfdf"
      bounds:
        lat:
          min: 34.5
          max: 71
        lon:
          min: -10
          max: 34

  - title: "Projection: Aitoff"
    description: |
      The default projection is "web-mercator" but we can change that to [Aitoff](https://en.wikipedia.org/wiki/Aitoff_projection) by setting the `projection➝name` value to `aitoff`.
    config:
      geojson:
        key: ISO_A3_EH
        data: geojson.world
      projection:
        name: aitoff
      key: code

  - title: "Projection: Equirectangular"
    description: |
      The default projection is "web-mercator" but we can change that to [equirectangular](https://en.wikipedia.org/wiki/Equirectangular_projection) by setting the `projection➝name` value to `equirectangular`. As the map would automatically adjust the size to the GeoJSON data (which doesn't have land above ~85&deg;), we'll explicitly set the bounds to the full range of latitude/longitude.
    config:
      geojson:
        key: ISO_A3_EH
        data: geojson.world
      projection:
        name: equirectangular
      key: code
      bounds:
        lat:
          min: -90
          max: 90
        lon:
          min: -180
          max: 180

  - title: "Projection: Gall-Peters"
    description: |
      The default projection is "web-mercator" but we can change that to [Gall-Peters](https://en.wikipedia.org/wiki/Gall%E2%80%93Peters_projection) by setting the `projection➝name` value to `gall-peters`.
    config:
      geojson:
        key: ISO_A3_EH
        data: geojson.world
      projection:
        name: gall-peters
      key: code

  - title: "Projection: Orthographic"
    description: |
      The default projection is "web-mercator" but we can change that to [Orthographic](https://en.wikipedia.org/wiki/Orthographic_map_projection) by setting the `projection➝name` value to `orthographic`. Orthographic projection behaves as if we are viewing the Earth from a distance. Let's make <a href="https://en.wikipedia.org/wiki/Choropleth_map">a choropleth map</a> showing total populations by country in Africa. We can rotate the globe by setting `projection➝lon`.
    config:
      data:
        - code: TZA
        - code: B28
        - code: COD
        - code: SOM
        - code: KEN
        - code: SDN
        - code: TCD
        - code: ZAF
        - code: LSO
        - code: ZWE
        - code: BWA
        - code: NAM
        - code: SEN
        - code: MLI
        - code: MRT
        - code: BEN
        - code: NER
        - code: NGA
        - code: CMR
        - code: TGO
        - code: GHA
        - code: CIV
        - code: GIN
        - code: GNB
        - code: LBR
        - code: SLE
        - code: BFA
        - code: CAF
        - code: COG
        - code: GAB
        - code: GNQ
        - code: ZMB
        - code: MWI
        - code: MOZ
        - code: SWZ
        - code: AGO
        - code: BDI
        - code: MDG
        - code: GMB
        - code: TUN
        - code: DZA
        - code: ERI
        - code: MAR
        - code: EGY
        - code: LBY
        - code: ETH
        - code: DJI
        - code: UGA
        - code: RWA
        - code: SDS
        - code: SOL
      geojson:
        key: BRK_A3
        data: geojson.world
      key: code
      projection:
        name: orthographic
        lon: 16
      scale: Viridis
      value: geojson.properties.POP_EST
      min: 0
      max: 200000000
      legend:
        position: top left
        items:
          - value: 200000000
            label: ">200m"
          - value: 150000000
            label: "150m"
          - value: 100000000
            label: "100m"
          - value: 50000000
            label: "50m"
          - value: 0
            label: "0"
      columns:
        - name: Tooltip
          template: "{{ geojson.properties.NAME_LONG }} / {{ code }}\nPopulation ({{ geojson.properties.POP_YEAR }}): {{ geojson.properties.POP_EST | toLocaleString() }}"
        - name: "filterLabel"
          template: "{{ geojson.properties.NAME_LONG }} ({{ code }})"
      tooltip: Tooltip
      tools:
        filter:
          label: "filterLabel"

  - title: "Projection: Orthographic zoomed"
    description: |
      Let's create an [Orthographic](https://en.wikipedia.org/wiki/Orthographic_map_projection) view centred on Europe and highlight a few countries. We set the `projection➝name` value to `orthographic`, set the `projection➝lat` and `projection➝lon` of the centre of the view, then use `bounds` to set an approximate latitude/longitude bounding box. To create the `tooltip` we create a virtual column that uses both the `data` structure (e.g. `{{ code }}`) and the `properties` of the `geojson` file (e.g. `{{ geojson.properties.POP_EST }}`).
    config:
      data:
        - code: AUT
        - code: BEL
        - code: CHE
        - code: DEU
        - code: ESP
        - code: FRA
        - code: GBR
        - code: IRL
        - code: ITA
        - code: LUX
        - code: NLD
        - code: PRT
      columns:
        - name: Tooltip
          template: "{{ geojson.properties.NAME_LONG }} / {{ code }}\nPopulation ({{ geojson.properties.POP_YEAR }}): {{ geojson.properties.POP_EST | toLocaleString() }}"
      key: code
      tooltip: Tooltip
      geojson:
        key: ISO_A3_EH
        data: geojson.world
      scale: Viridis
      value: "geojson.properties.POP_EST"
      min: 0
      projection:
        name: orthographic
        lat: 48
        lon: 10
      bounds:
        lat:
          min: 33
          max: 60
        lon:
          min: -12
          max: 25

  - title: "Projection: Web-Mercator"
    description: |
      The default projection is "web-mercator". In this example we'll display countries of the world and explicitly set the `bounds` to make sure we get the full planet (otherwise the North Pole area will be cropped).
    config:
      geojson:
        key: SOV_A3
        data: geojson.world
      key: code
      bounds:
        lat:
          min: -90
          max: 90
        lon:
          min: -180
          max: 180

  - title: "Projection: Web-Mercator zoomed"
    description: |
      Let's show a map of <a href="https://geoportal.statistics.gov.uk/datasets/ons::local-authority-districts-may-2023-uk-buc-2/explore">UK local authorities 2023</a> (ONS) using the default `projection`. We could optionally set the centre of the projection using `projection➝lat` and `projection➝lon` but not doing so will make sure the view resembles that used in Open Street Map/Google Maps etc. We can zoom in to a portion of the map by setting `bounds`. We will add a graticule with 1&deg; spacing under the data and background layers.
    config:
      data: test.data.uk_local_authorities_2023
      columns:
        - name: Tooltip
          template: "{{ geojson.properties.LAD23NM }} / {{ geojson.properties.LAD23CD }}\n{{ region }} / {{ region code }}"
      geojson:
        key: LAD23CD
        data: geojson.Local_Authority_Districts_(May_2023)_UK_BUC
      bounds:
        lat:
          min: 49.8
          max: 60.8
        lon:
          min: -8.4
          max: 2
      layers:
        - type: "graticule"
          step: [1,1]
        - type: "background"
          geojson: geojson.IRL
          colour: "#dfdfdf"
        - type: "data"
          key: code
          tooltip: Tooltip
      legend:
        position: bottom
        items:
          - label: "Scotland"
            colour: "#2254F4"
          - label: "Northern Ireland"
            colour: "#722EA5"
          - label: "North East"
            colour: "#D60303"
          - label: "North West"
            colour: "#1DD3A7"
          - label: "Yorks and the Humber"
            colour: "#F9BC26"
          - label: "Wales"
            colour: "#0DBC37"
          - label: "West Midlands"
            colour: "#E6007C"
          - label: "East Midlands"
            colour: "#00B6FF"
          - label: "East of England"
            colour: "#FF6700"
          - label: "London"
            colour: "#D73058"
          - label: "South East"
            colour: "#67E767"
          - label: "South West"
            colour: "#178CFF"


  - title: "Projection: OS Grid"
    description: |
      We can set the `projection` to "osgb" which is shorthand for applying a <a href="https://en.wikipedia.org/wiki/Transverse_Mercator_projection">Transverse Mercator projection</a> centred on 49&deg;,-2&deg;. This replicates the look of a map shown in <a href="https://en.wikipedia.org/wiki/Ordnance_Survey_National_Grid">Ordanance Survey's National Grid</a> coordinates. We can also add a `graticule` to see longitudes/latitudes lines with 1&deg; spacing. Outside of the UK things will look increasingly distorted.
    config:
      data: test.data.uk_local_authorities_2023
      columns:
        - name: Tooltip
          template: "{{ geojson.properties.LAD23NM }} / {{ geojson.properties.LAD23CD }}\n{{ region }} / {{ region code }}"
      geojson:
        key: LAD23CD
        data: geojson.Local_Authority_Districts_(May_2023)_UK_BUC
      projection:
        name: osgb
      layers:
        - type: "graticule"
          step: [1,1]
        - type: "data"
          key: code
          tooltip: Tooltip
      bounds:
        lat:
          min: 49.75
          max: 61.01
        lon:
          min: -8
          max: 3
      legend:
        position: bottom
        items:
          - label: "Scotland"
            colour: "#2254F4"
          - label: "Northern Ireland"
            colour: "#722EA5"
          - label: "North East"
            colour: "#D60303"
          - label: "North West"
            colour: "#1DD3A7"
          - label: "Yorks and the Humber"
            colour: "#F9BC26"
          - label: "Wales"
            colour: "#0DBC37"
          - label: "West Midlands"
            colour: "#E6007C"
          - label: "East Midlands"
            colour: "#00B6FF"
          - label: "East of England"
            colour: "#FF6700"
          - label: "London"
            colour: "#D73058"
          - label: "South East"
            colour: "#67E767"
          - label: "South West"
            colour: "#178CFF"
options: |
  <ul>
  <li><code>data</code> - (optional) Either a reference to a CSV file in the Lume site or an array of rows with named attributes. If used you will need to match this to the GeoJSON properties using <code>key</code>.</li>
  <li><code>columns</code> - As with many of the visualisation types you can optionally add <a href="/documentation/virtual-columns/">virtual columns</a>.</li>
  <li><code>geojson</code> - (required):
    <ul>
    <li><code>key</code> - The GeoJSON property to use to match with the <code>data</code>.</li>
    <li><code>data</code> - Either a reference to a GeoJSON file in the Lume site or inline GeoJSON.</li>
    </ul>
  </li>
  <li><code>colours</code> - Define some <a href="/documentation/colours#specific-named-colours">visualisation-specific named colours</a>.</li>
  <li><code>width</code> - An optional minimum width (e.g. <code>400px</code>) for each panel. Panels may then be arranged by however many columns will fit in the page width.</li>
  <li><code>projection</code> - Set the map projection:
    <ul>
    <li><code>name</code> - One of <code>aitoff</code>, <code>equirectangular</code>, <code>gall-peters</code>, <code>orthographic</code> (for orthographic you can also set the <code>lat</code>/<code>lon</code> for the projection centre), <code>web-mercator</code> (default), or <code>osgb</code>.</li>
    </ul>
  </li>
  <li><code>bounds</code> - Set a longitude/latitude bounds of the map:
    <ul>
    <li><code>lat</code> - The latitude bounds:
      <ul>
      <li><code>min</code> - The minimum latitude</li>
      <li><code>max</code> - The maximum latitude</li>
      </ul>
    </li>
    <li><code>lon</code> - The longitude bounds:
      <ul>
      <li><code>min</code> - The minimum longitude</li>
      <li><code>max</code> - The maximum longitude</li>
      </ul>
    </li>
    </ul>
  </li>
  <li><code>layers</code> - An <a href="/samples/map/svg/#example-12">array of map layers</a> in the order they will be layered. Each layer has a property <code>type</code> which can be one of:
    <ul>
    <li><code>background</code> - Set a GeoJSON background:
      <ul>
      <li><code>geojson</code> - Either a reference to a GeoJSON file in the Lume site or inline GeoJSON</li>
      <li><code>colour</code> - The colour for the background polygons.</li>
      </ul>
    </li>
    <li><code>data</code> - Add the data layer to the map:
      <ul>
      <li><code>key</code> - The title of the column to use to match IDs with the GeoJSON.</li>
      <li><code>value</code> - The title of the column that will be used to get the colour of a polygon. If the value is a number you should also set the <code>scale</code>.</li>
      <li><code>tooltip</code> - Either a string, template string, or the column heading to use to build a tooltip.</li>
      <li><code>scale</code> - A <a href="../colours/#scales">colour scale</a> to use to colour the polygons based on the value.</li>
      <li><code>min</code> - Used with <code>scale</code> and <code>max</code> to define the colour scale.</li>
      <li><code>max</code> - Used with <code>scale</code> and <code>min</code> to define the colour scale.</li>
      </ul>
    </li>
    <li><code>graticule</code> - Add a graticule:
      <ul>
      <li><code>step</code> - An array defining the latitude and longitude spacing of the graticule in degrees.</li>
      </ul>
    </li>
    <li><code>labels</code> - Add a place label layer:
      <ul>
        <li><code>places</code> - An array of place markers that sit above the interactive layer. A place can be defined with the following properties:
        <ul>
        <li><code>name</code> - the label to use for the place label</li>
        <li><code>latitude</code> - set the latitude of the label (can be omitted if it is a UK place we know about)</li>
        <li><code>longitude</code> - set the longitude of the label (can be omitted if it is a UK place we know about)</li>
        <li><code>text-anchor</code> - set to either <code>start</code>, <code>middle</code>, or <code>end</code> to anchor the text</li>
        <li><code>colour</code> - the colour of the label (default is black)</li>
        <li><code>border</code> - the colour of the label border (default is white)</li>
        <li><code>font-size</code> - manually set the font size (if omitted it will be scaled to the population where known)</li>
        <li><code>font-weight</code> - manually set the font weight (e.g. to "bold")</li>
        <li><code>font-family</code> - manually set the font family</li>
        </ul>
        </li>
      </ul>
    </li>
    <li><code>markers</code> - An array of markers
      <ul>
        <li><code>markers</code> - A marker can be defined with the following properties:
        <ul>
        <li><code>icon</code> - Can be either be a string (one of <code>default</code>, <code>geo</code>, <code>geo-alt</code>, <code>asterisk</code>, <code>pin</code>, <code>balloon</code>, <code>balloon-heart</code>, <code>chat-square</code>) or an object with the form:
          <ul>
          <li><code>svg</code> - The SVG string to use</li>
          <li><code>size</code> - e.g. <code>[40,40]</code></li>
          <li><code>anchor</code> - e.g. <code>[20,0]</code></li>
          </ul>
        </li>
        <li><code>latitude</code> - set the latitude of the marker</li>
        <li><code>longitude</code> - set the longitude of the marker</li>
        <li><code>colour</code> - the colour of the label (default is black)</li>
        <li><code>tooltip</code> - the content of an optional tooltip</li>
        </ul>
        </li>
      </ul>
    </li>
    </ul>
  </li>
  <li><code>padding</code> - Set the padding between the data layer and the map edges. The value is given in the pixel scale of the generated map (which may not be the same as the pixels the map takes up on screen).</li>
  <li><code>legend</code> - Define the <a href="/documentation/chart-furniture/#legends">legend</a>.</li>
  <li><code>options</code> - Set some options:
    <ul>
    <li><code>fillOpacity</code> - The fill-opacity of the polygons</li>
    </ul>
  </li>
  <li><code>tools</code> - Add some useful interactive tools:
    <ul>
    <li><code>filter</code> - A search tool to filter hexes:
      <ul>
        <li><code>label</code> - The title of the column to use as the displayed name for a hex in the search results.</li>
        <li><code>max</code> - The maximum number of results to show.</li>
      </ul>
    </li>
    <li><code>slider</code><span class="version">Since 0.16.2</span> - A slider tool that will change the colouring of the hexes:
      <ul>
        <li><code>columns</code> - An array of column titles to use to change the colouring of the hexes.</li>
      </ul>
    </li>
    </ul>
  </li>
  <li><code>attribution</code> - Add a line of <a href="/documentation/chart-furniture/#attribution">attribution text</a> under the visualisation.</li>
  </ul>

---


{#
Other options include...
options:
  scale: "hsl(87, 57%, 86%) 0%, hsl(191, 57%, 15%) 100%"
  min: 0
  max: 5000000
  legend:
    position: top right
    items:
      - value: 5000000
        label: 5 million
      - value: 4000000
        label: 4 million
      - value: 3000000
        label: 3 million
      - value: 2000000
        label: 2 million
      - value: 1000000
        label: 1 million
      - value: 0
        label: '0'
#}