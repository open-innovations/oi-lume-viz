---
title: Table
description: |
  Merge rows, use colour scales and sort columns.
order: 2
showcase: 4
component: table
layout: layout/sample-viz.vto
version: 0.8.0
examples:
  - title: "Simple table"
    description: |
      This example shows three columns from a CSV file.
    config:
      data: test.data.table
      columns:
        - name: "Overall category"
        - name: "Intervention"
        - name: "Sub-category"
  - title: "Merge rows"
    description: |
      Let's tidy up the table a little. Two of the columns contain a number of neighbouring rows that have the same values. We can choose to merge those rows by setting `mergerows` to `true` (this will set the `rowspan` property on the first table cell).
    config:
      data: test.data.table
      columns:
        - name: "Overall category"
          mergerows: true
        - name: "Intervention"
          mergerows: true
        - name: "Sub-category"
  - title: "Colourful columns"
    description: |
      We can set a `colour` for a column. The text of those cells will be set to a contrasting colour.
    config:
      data: test.data.table
      columns:
        - name: "Overall category"
          mergerows: true
          colour: "#2254F4"
        - name: "Intervention"
          mergerows: true
        - name: "Sub-category"
  - title: "Virtual columns"
    description: |
      Sometimes your data source may not be in quite the format you need. We can use `template` to create a "<a href="../../documentation/virtual-columns/">virtual column</a>" that is a simple string built from values that exist in the data. In this example we generate a column named `Local Authority` which creates a link using the `page` and `url` values. Defining a column with a `template` is also useful for renaming a column heading. We can also set the text alignment in a column using `align`.
    config:
      data:
        - page: Liverpool City Region
          url: https://open-innovations.github.io/council-website-emissions/areas/E47000004.html
          co2: 5.33
        - page: Tendring District Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E07000076.html
          co2: 3.90
        - page: London Borough of Newham
          url: https://open-innovations.github.io/council-website-emissions/areas/E09000025.html
          co2: 2.99
        - page: Melton Borough Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E07000133.html
          co2: 2.95
        - page: Welwyn Hatfield Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E07000241.html
          co2: 2.68
        - page: Dacorum Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E07000096.html
          co2: 2.68
        - page: Harborough District Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E07000131.html
          co2: 2.59
        - page: Bridgend County Borough Council
          url: https://open-innovations.github.io/council-website-emissions/areas/W06000013.html
          co2: 2.53
        - page: Reading Borough Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E06000038.html
          co2: 2.34
        - page: Bournemouth, Christchurch and Poole
          url: https://open-innovations.github.io/council-website-emissions/areas/E06000058.html
          co2: 2.27
      columns:
        - name: "Local Authority"
          template: "<a href='{{ url }}'>{{ page }}</a>"
        - name: "CO2 (g)"
          template: "{{ co2 | toFixed(2) }}"
          align: center
  - title: "Heat map columns"
    description: |
      We can set a `scale` (with optional `min` and `max` values) for a specific column to colour the numeric cells in that column.
    config:
      data:
        - page: Liverpool City Region
          url: https://open-innovations.github.io/council-website-emissions/areas/E47000004.html
          co2: 5.33
          size: 21.2
        - page: Tendring District Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E07000076.html
          co2: 3.90
          size: 15.5
        - page: London Borough of Newham
          url: https://open-innovations.github.io/council-website-emissions/areas/E09000025.html
          co2: 2.99
          size: 13.7
        - page: Melton Borough Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E07000133.html
          co2: 2.95
          size: 13.5
        - page: Welwyn Hatfield Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E07000241.html
          co2: 2.68
          size: 10.6
        - page: Dacorum Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E07000096.html
          co2: 2.68
          size: 10.6
        - page: Harborough District Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E07000131.html
          co2: 2.59
          size: 10.3
        - page: Bridgend County Borough Council
          url: https://open-innovations.github.io/council-website-emissions/areas/W06000013.html
          co2: 2.53
          size: 10.0
        - page: Reading Borough Council
          url: https://open-innovations.github.io/council-website-emissions/areas/E06000038.html
          co2: 2.34
          size: 9.3
        - page: Bournemouth, Christchurch and Poole
          url: https://open-innovations.github.io/council-website-emissions/areas/E06000058.html
          co2: 2.27
          size: 9.0
      columns:
        - name: "Local Authority"
          template: "{{ page }}"
        - name: "CO2 (g)"
          template: "{{ co2 | toFixed(2) }}"
          align: center
          scale: Heat_r
          min: 0
        - name: "Size (MB)"
          template: "{{ size | toFixed(2) }}"
          align: center
          scale: Heat_r
          min: 0
  - title: "Set table width"
    description: |
      No default width is set for tables. If, say, you would like to make a specific table take up 100% of the width of the container you can set the `width` value.
    config:
      width: "100%"
      data:
        - page: Liverpool City Region
          co2: 5.33
          size: 21.2
        - page: Tendring District Council
          co2: 3.90
          size: 15.5
        - page: London Borough of Newham
          co2: 2.99
          size: 13.7
        - page: Melton Borough Council
          co2: 2.95
          size: 13.5
        - page: Welwyn Hatfield Council
          co2: 2.68
          size: 10.6
        - page: Dacorum Council
          co2: 2.68
          size: 10.6
        - page: Harborough District Council
          co2: 2.59
          size: 10.3
        - page: Bridgend County Borough Council
          co2: 2.53
          size: 10.0
        - page: Reading Borough Council
          co2: 2.34
          size: 9.3
        - page: Bournemouth, Christchurch and Poole
          co2: 2.27
          size: 9.0
      columns:
        - name: "Local Authority"
          template: "{{ page }}"
        - name: "CO2 (g)"
          template: "{{ co2 | toFixed(2) }}"
          align: center
          scale: Heat_r
          min: 0
        - name: "Size (MB)"
          template: "{{ size | toFixed(2) }}"
          align: center
          scale: Heat_r
          min: 0
  - title: "Sort by column"
    description: |
      If you would like to pre-sort the table by a particular column, you can set `sort` to the column `name`. You can also `reverse` the direction of the sort. Note that `sort` is applied before `mergerows`.
    config:
      width: "100%"
      data:
        - page: Liverpool City Region
          co2: 5.33
          size: 21.2
        - page: Tendring District Council
          co2: 3.90
          size: 15.5
        - page: London Borough of Newham
          co2: 2.99
          size: 13.7
        - page: Melton Borough Council
          co2: 2.95
          size: 13.5
        - page: Welwyn Hatfield Council
          co2: 2.68
          size: 10.6
        - page: Dacorum Council
          co2: 2.68
          size: 10.6
        - page: Harborough District Council
          co2: 2.59
          size: 10.3
        - page: Bridgend County Borough Council
          co2: 2.53
          size: 10.0
        - page: Reading Borough Council
          co2: 2.34
          size: 9.3
        - page: Bournemouth, Christchurch and Poole
          co2: 2.27
          size: 9.0
      columns:
        - name: "Local Authority"
          template: "{{ page }}"
        - name: "CO2 (g)"
          template: "{{ co2 | toFixed(2) }}"
          align: center
          scale: Heat_r
          min: 0
        - name: "Size (MB)"
          template: "{{ size | toFixed(2) }}"
          align: center
          scale: Heat_r
          min: 0
      sort: "Size (MB)"
      reverse: true
  - title: "Sortable columns"
    description: |
      If you would like to make it possible to sort by a particular column, you can set that column to `sortable`. It isn't currently possible to make a table sortable when `mergerows` has been used on any column.
    config:
      width: "100%"
      data:
        - page: Liverpool City Region
          co2: 5.33
          size: 21.2
        - page: Tendring District Council
          co2: 3.90
          size: 15.5
        - page: London Borough of Newham
          co2: 2.99
          size: 13.7
        - page: Melton Borough Council
          co2: 2.95
          size: 13.5
        - page: Welwyn Hatfield Council
          co2: 2.68
          size: 10.6
        - page: Dacorum Council
          co2: 2.68
          size: 10.6
        - page: Harborough District Council
          co2: 2.59
          size: 10.3
        - page: Bridgend County Borough Council
          co2: 2.53
          size: 10.0
        - page: Reading Borough Council
          co2: 2.34
          size: 9.3
        - page: Bournemouth, Christchurch and Poole
          co2: 2.27
          size: 9.0
      columns:
        - name: "Local Authority"
          template: "{{ page }}"
          sortable: true
        - name: "CO2 (g)"
          template: "{{ co2 | toFixed(2) }}"
          align: center
          scale: Heat_r
          min: 0
          sortable: true
        - name: "Size (MB)"
          template: "{{ size | toFixed(2) }}"
          align: center
          scale: Heat_r
          min: 0
          sortable: true
  - title: "Limit the rows"
    version: 0.16.5
    description: |
      We can [limit which rows are included](/documentation/limit-rows) using `where`.
    config:
      width: "100%"
      data:
        - page: Liverpool City Region
          co2: 5.33
          size: 21.2
        - page: Tendring District Council
          co2: 3.90
          size: 15.5
        - page: London Borough of Newham
          co2: 2.99
          size: 13.7
        - page: Melton Borough Council
          co2: 2.95
          size: 13.5
        - page: Welwyn Hatfield Council
          co2: 2.68
          size: 10.6
        - page: Dacorum Council
          co2: 2.68
          size: 10.6
        - page: Harborough District Council
          co2: 2.59
          size: 10.3
        - page: Bridgend County Borough Council
          co2: 2.53
          size: 10.0
        - page: Reading Borough Council
          co2: 2.34
          size: 9.3
        - page: Bournemouth, Christchurch and Poole
          co2: 2.27
          size: 9.0
      columns:
        - name: "Local Authority"
          template: "{{ page }}"
          sortable: true
        - name: "CO2 (g)"
          template: "{{ co2 | toFixed(2) }}"
          align: center
          scale: Heat_r
          min: 0
          sortable: true
        - name: "Size (MB)"
          template: "{{ size | toFixed(2) }}"
          align: center
          scale: Heat_r
          min: 0
          sortable: true
      where: '"co2">=2.7'
options: |
  <ul>
  <li><code>data</code> - (required) Either a reference to a CSV file in the Lume site or an array of rows with named attributes</li>
  <li>
  	<code>columns</code> - An ordered array of columns to use to build the table. You could also create a <a href="/documentation/virtual-columns/">virtual column</a> here. Each is of the form:
  	<ul>
  	<li><code>name</code> - (required) The title of the column in the data.</li>
  	<li><code>align</code> - Set the text alignment of the column e.g. <code>left</code>, <code>center</code>, or <code>right</code></li>
  	<li><code>class</code><span class="version">Since 0.17.2</span> - An optional <code>class</code> to apply to the cells in this column.</li>
  	<li><code><a href="../../samples/table/#example-3" aria-title="Set the column colour in a table">colour</a></code> - A hex colour to use for the background colour of the cells in this column.</li>
    <li><code>label</code> - An optional label for the column. If not given the column header will be the <code>name</code>.</li>
  	<li><code>max</code> - Used with <code>scale</code> and <code>min</code> to define the colour scale. If not included, the maximum value of the column will be used.</li>
  	<li><code><a href="../../samples/table/#example-2" aria-title="Set if rows should be merged in a table">mergerows</a></code> - (boolean) if this column contains neighbouring rows with the same value, these will be merged into one cell.</li>
  	<li><code>min</code> - Used with <code>scale</code> and <code>max</code> to define the colour scale. If not included, the minimum value of the column will be used.</li>
  	<li><code><a href="samples/table/#example-5" aria-title="Set a table column's background using a scale">scale</a></code> - A <a href="../colours/#scales">colour scale</a> to use to set a cell's background colour based on the cell value.</li>
  	<li><code><a href="../../samples/table/#example-7" aria-title="Set if a table column is sortable">sortable</a></code> - (boolean) if this column will be made sortable by the viewer. Note that it isn't possible to make a column sortable if <code>mergerows</code> has been used on any column.</li>
  	<li><code>template</code> - A <a href="../virtual-columns/">virtual column</a> can be created from other columns in the data.</li>
  	<li><code>th</code><span class="version">Since 0.17.2</span> - Set <code>true</code> to make the cells in this column use <code>&lt;th scope="row"&gt;</code> rather than <code>&lt;td&gt;</code>.</li>
  	</ul>
  </li>
  <li><code>head</code><span class="version">Since 0.17.2</span> - A structure of the form:
  	<ul>
  	<li><code>class</code> - Class(es) to apply to the <code>&lt;thead&gt;</code></li>
    </ul>
  </li>
  <li><code>sort</code> - the name of the column to sort by.</li>
  <li><code>reverse</code> - (boolean) By default the order is from low to high but you can order from high to low if this is set to true.</li>
  <li><code>colours</code> - Define some <a href="/documentation/colours#specific-named-colours">visualisation-specific named colours</a>.</li>
  <li><code>width</code> - An optional minimum width (e.g. <code>100%</code>) for the table.</li>
  <li><code>where</code> - <a href="/documentation/limit-rows/">Limit the rows to include</a></li>
  <li><code>attribution</code> - Add a line of <a href="/documentation/chart-furniture/#attribution">attribution text</a> under the visualisation.</li>
  </ul>
  
---

<p>When making tables it is useful to keep in mind the <a href="https://royal-statistical-society.github.io/datavisguide/docs/principles.html#elements-of-tables">advice on table elements from the Royal Statistical Society</a>.</p>