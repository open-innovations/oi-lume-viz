---
layout: layout/base.njk
title: Fonts
fonts:
  - "Arial"
  - "Century Gothic"
  - "Courier New"
  - "Garamond"
  - "Georgia"
  - "Roboto"
  - "Tahoma"
  - "Times New Roman"
  - "Trebuchet MS"
  - "Verdana"
---

		<h1>{{ title }}</h1>
		<p>It is possible to set various default font properties for the visualisations.</p>

		<ol>
			<li><a href="#customise-family">Setting font family</a></li>
			<li><a href="#customise-fonts">Setting font metrics</a></li>
			<li><a href="#customise-size">Setting font size</a></li>
			<li><a href="#customise-weight">Setting font weight</a></li>
		</ol>

	</div>
</div>
<section class="padded tallpadded">
	<div class="holder">

		<h2>Setting font family{{ comp.anchor({ ref: "customise-family" }) | await | safe }}</h3>
		<p>By default no <code>font-family</code> is set. If you want to set a font, you can update <code>_config.[js|ts]</code> with:</p>
		<pre><code class="hljs language-json">site.use(oiLumeViz({
  ...
  "font": {
    "family": "ExampleFont, sans-serif"
  },
  ...
}));</code></pre>
		<p>When no <code>font-family</code> is set, the font metrics for <code>Arial</code> will be used for text placement. This may lead to positioning issues if the font chosen by a viewer's system is very different to Arial.</p>

		<h2>Setting font metrics{{ comp.anchor({ ref: "customise-fonts" }) | await | safe }}</h3>
		<p>If your visualisation text will be using a font other than {% for font in fonts %}{% if loop.index0 > 0 %}, {% endif %}"<span style="font-family:{{ font }}">{{ font }}"</span>{% endfor %} you will need to update <code>_config.[js|ts]</code> with either:</p>
		<h3>1) Font metrics</h3>
		<p>Font metrics gives the width of every character for a given <code>font-size</code>. We have created the <a href="../tools/font-metrics/">font metrics tool</a> to help with creating static metrics.</p>
		<pre><code class="hljs language-json">site.use(oiLumeViz({
  ...
  "font": {
    "family": "ExampleFont, sans-serif",
    "fonts": {
      "ExampleFont": {
        "normal": {"font-size":32,"widths":[0,...]},
        "bold":{"font-size":32,"widths":[0,...]}
      },
    },
  },
  ...
}));</code></pre>
		<h3>2) A function{{ comp.version({version:"0.16.3"}) | await | safe }}</h3>
		<p>Alternatively you could provide a function that returns the width (in pixels) of a given text string. Here is an overly simplistic example function but you could easily use external libraries that calculate the string width using the original font files.</p>
		<pre><code class="hljs language-json">site.use(oiLumeViz({
 ...
  "font": {
    "family": "ExampleFont, sans-serif",
    "fonts": {
      "ExampleFont": {
        "normal": function(txt,fs){ return txt.length * fs; },
        "bold": function(txt,fs){ return 1.2 * txt.length * fs; }
      },
    },
  },
  ...
}));</code></pre>

		<h2>Setting font size{{ comp.anchor({ ref: "customise-size" }) | await | safe }}</h3>
		<p>The default font size is set to <code>16</code>. You can change that in <code>_config.[js|ts]</code>:</p>
		<pre><code class="hljs language-json">site.use(oiLumeViz({
  ...
  "font": {
    "size": 18,
  },
  ...
}));</code></pre>


		<h2>Setting font weight{{ comp.anchor({ ref: "customise-weight" }) | await | safe }}</h3>
		<p>The default font weight is <code>normal</code>. You can change that in <code>_config.[js|ts]</code>:</p>
		<pre><code class="hljs language-json">site.use(oiLumeViz({
  ...
  "font": {
    "weight": "bold",
  },
  ...
}));</code></pre>


	</div>
</section>
<div><div>