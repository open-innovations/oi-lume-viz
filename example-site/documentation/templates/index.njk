---
layout: layout/base.njk
title: String templates
value: 1500
---

<h1>{{ title }}</h1>

<p>Sometimes you may need to construct a simple <code>tooltip</code> or <code>label</code> for each data point using attributes in the data. The simplest method would be to create a column in your original data file that contains the text for each tooltip. But you may not have the luxury of editing the original data. In those cases you can use simple text templates to construct a "virtual column" and refer to this column for the tooltip.</p>

<p>We've allowed pattern-based-strings to be defined which will take values from the data using a double curly braces syntax e.g. <code>{% raw %}{{ key }}{% endraw %}</code>. For instance, say the data rows for a visualisation contain the attributes/columns <code>ConstituencyName</code> and <code>population</code>. We can build a very simple tooltip string as <code>{% raw %}{{ ConstituencyName }}: {{ population }}{% endraw %}</code>. In this case <code>{% raw %}{{ ConstituencyName }}{% endraw %}</code> will be replaced by that row's <code>ConstituencyName</code> value and <code>{% raw %}{{ population }}{% endraw %}</code> by the <code>population</code> value.</p>

<h2>Filter functions{{ comp.anchor({ ref: "filters" }) | safe }}</h2>

<p>You can also use the following filters:</p>

<ul>
	<li><code>colourScale(scale,min,max)</code> - get a colour to, for example, use as a background style</li>
	<li><code>contrastColour</code> - get a contrasting colour (black or white)</li>
	<li><code>multiply(n)</code> - to multiply a value by n</li>
	<li><code>strftime("%Y-%m-%d")</code> - convert an <a href="https://en.wikipedia.org/wiki/ISO_8601">ISO8601 date</a> or Unix timestamp into <a href="https://www.tutorialspoint.com/posix-function-strftime-in-perl">a specific date format</a></li>
	<li><code>strptime("%Y-%m-%d")</code> - parse a date using <a href="https://www.tutorialspoint.com/posix-function-strftime-in-perl">a specific date format</a>. In this example it would parse and ISO8601 date. If no day is given it will default to <code>1</code>. Hours, minutes and seconds default to <code>0</code>.</li>
	<li><code>decimalYear()</code> - calculate the decimal year value of a date.</li>
	<li><code>toFixed(n)</code> - to limit a value to n decimal places</li>
	<li><code>toLocaleString()</code> - to use the locale's (of the server) preferred formatting for a value</li>
</ul>

<p>For instance, to convert <code>{% raw %}{{ {% endraw %} {{ value }}{% raw %} }}{% endraw %}</code> to a locale string:</p>
<pre><code class="hljs language-yaml">{% raw %}{{ {% endraw %} {{ value }}{% raw %} | toLocaleString("en-GB") }}{% endraw %}</code></pre>
<p>Then <code>{{ value }}</code> becomes <code>1,500</code>.</p>
